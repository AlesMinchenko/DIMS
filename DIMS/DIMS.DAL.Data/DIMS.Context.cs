//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HIMS.EF.DAL.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DIMSContext : DbContext
    {
        public DIMSContext()
            : base("name=DIMSContext")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<C__RefactorLog> C__RefactorLog { get; set; }
        public virtual DbSet<Direction> Directions { get; set; }
        public virtual DbSet<Sample> Samples { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<TaskTrack> TaskTracks { get; set; }
        public virtual DbSet<UserProfile> UserProfiles { get; set; }
        public virtual DbSet<UserTask> UserTasks { get; set; }
        public virtual DbSet<UserTrack> UserTracks { get; set; }
        public virtual DbSet<vTask> vTasks { get; set; }
        public virtual DbSet<vUserProfile> vUserProfiles { get; set; }
        public virtual DbSet<vUserTrack> vUserTracks { get; set; }
    
        public virtual int DeleteTask(Nullable<int> taskid)
        {
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("taskid", taskid) :
                new ObjectParameter("taskid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTask", taskidParameter);
        }
    
        public virtual int SampleEntriesAmount(Nullable<bool> isAdmin, ObjectParameter result)
        {
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("isAdmin", isAdmin) :
                new ObjectParameter("isAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SampleEntriesAmount", isAdminParameter, result);
        }

        //public System.Data.Entity.DbSet<HIMS.Server.Models.TaskViewModel> TaskViewModels { get; set; }
    }
}
